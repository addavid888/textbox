name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
        default: "v1.0.0"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: |
          npm run lint
          npm audit --audit-level high

      - name: Build application
        run: npm run build
        env:
          CI: false
          NODE_ENV: production

      - name: Create release archive
        run: |
          cd dist
          tar -czf ../note-taking-app-${{ github.event.release.tag_name || inputs.version }}.tar.gz .
          cd ..

      - name: Upload release assets
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./note-taking-app-${{ github.event.release.tag_name }}.tar.gz
          asset_name: note-taking-app-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Deploy to production
        if: github.event_name == 'release'
        uses: actions/configure-pages@v3

      - name: Upload to GitHub Pages
        if: github.event_name == 'release'
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        if: github.event_name == 'release'
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Create deployment summary
        run: |
          echo "## ðŸŽ‰ Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ github.event.release.tag_name || inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** âœ… Successfully deployed" >> $GITHUB_STEP_SUMMARY
          echo "**Build Size:** $(du -sh dist/ | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Build Contents" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -la dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
